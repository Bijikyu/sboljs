{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict",
        "raw": "\"use strict\"",
        "range": [
          1451,
          1463
        ],
        "loc": {
          "start": {
            "line": 30,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 12
          }
        }
      },
      "range": [
        1451,
        1464
      ],
      "loc": {
        "start": {
          "line": 30,
          "column": 0
        },
        "end": {
          "line": 30,
          "column": 13
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "\n * Copyright (C) 2015 ICOS Group, Newcastle University.  All rights reserved.\n * Contact:  James Alastair McLaughlin <j.a.mclaughlin@ncl.ac.uk>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *  \n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  \n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * \n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n ",
          "range": [
            1,
            1449
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 28,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "URI",
            "range": [
              1473,
              1476
            ],
            "loc": {
              "start": {
                "line": 32,
                "column": 7
              },
              "end": {
                "line": 32,
                "column": 10
              }
            }
          },
          "range": [
            1473,
            1476
          ],
          "loc": {
            "start": {
              "line": 32,
              "column": 7
            },
            "end": {
              "line": 32,
              "column": 10
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "urijs",
        "raw": "'urijs'",
        "range": [
          1482,
          1489
        ],
        "loc": {
          "start": {
            "line": 32,
            "column": 16
          },
          "end": {
            "line": 32,
            "column": 23
          }
        }
      },
      "range": [
        1466,
        1491
      ],
      "loc": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 0
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports",
            "range": [
              1491,
              1498
            ],
            "loc": {
              "start": {
                "line": 34,
                "column": 0
              },
              "end": {
                "line": 34,
                "column": 7
              }
            }
          },
          "property": {
            "type": "Identifier",
            "name": "uriOrObject",
            "range": [
              1499,
              1510
            ],
            "loc": {
              "start": {
                "line": 34,
                "column": 8
              },
              "end": {
                "line": 34,
                "column": 19
              }
            }
          },
          "range": [
            1491,
            1510
          ],
          "loc": {
            "start": {
              "line": 34,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 19
            }
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": {
            "type": "Identifier",
            "name": "uriOrObject",
            "range": [
              1499,
              1510
            ],
            "loc": {
              "start": {
                "line": 34,
                "column": 8
              },
              "end": {
                "line": 34,
                "column": 19
              }
            }
          },
          "params": [
            {
              "type": "Identifier",
              "name": "obj",
              "range": [
                1534,
                1537
              ],
              "loc": {
                "start": {
                  "line": 34,
                  "column": 43
                },
                "end": {
                  "line": 34,
                  "column": 46
                }
              }
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "instanceof",
                  "left": {
                    "type": "Identifier",
                    "name": "obj",
                    "range": [
                      1549,
                      1552
                    ],
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 7
                      },
                      "end": {
                        "line": 36,
                        "column": 10
                      }
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "URI",
                    "range": [
                      1564,
                      1567
                    ],
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 22
                      },
                      "end": {
                        "line": 36,
                        "column": 25
                      }
                    }
                  },
                  "range": [
                    1549,
                    1567
                  ],
                  "loc": {
                    "start": {
                      "line": 36,
                      "column": 7
                    },
                    "end": {
                      "line": 36,
                      "column": 25
                    }
                  }
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "obj",
                    "range": [
                      1584,
                      1587
                    ],
                    "loc": {
                      "start": {
                        "line": 37,
                        "column": 15
                      },
                      "end": {
                        "line": 37,
                        "column": 18
                      }
                    }
                  },
                  "range": [
                    1577,
                    1588
                  ],
                  "loc": {
                    "start": {
                      "line": 37,
                      "column": 8
                    },
                    "end": {
                      "line": 37,
                      "column": 19
                    }
                  }
                },
                "alternate": null,
                "range": [
                  1546,
                  1588
                ],
                "loc": {
                  "start": {
                    "line": 36,
                    "column": 4
                  },
                  "end": {
                    "line": 37,
                    "column": 19
                  }
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "typeof",
                    "argument": {
                      "type": "Identifier",
                      "name": "obj",
                      "range": [
                        1604,
                        1607
                      ],
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 14
                        },
                        "end": {
                          "line": 39,
                          "column": 17
                        }
                      }
                    },
                    "prefix": true,
                    "range": [
                      1597,
                      1608
                    ],
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 7
                      },
                      "end": {
                        "line": 39,
                        "column": 18
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": "string",
                    "raw": "'string'",
                    "range": [
                      1613,
                      1621
                    ],
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 23
                      },
                      "end": {
                        "line": 39,
                        "column": 31
                      }
                    }
                  },
                  "range": [
                    1597,
                    1621
                  ],
                  "loc": {
                    "start": {
                      "line": 39,
                      "column": 7
                    },
                    "end": {
                      "line": 39,
                      "column": 31
                    }
                  }
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "URI",
                      "range": [
                        1638,
                        1641
                      ],
                      "loc": {
                        "start": {
                          "line": 40,
                          "column": 15
                        },
                        "end": {
                          "line": 40,
                          "column": 18
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "obj",
                        "range": [
                          1642,
                          1645
                        ],
                        "loc": {
                          "start": {
                            "line": 40,
                            "column": 19
                          },
                          "end": {
                            "line": 40,
                            "column": 22
                          }
                        }
                      }
                    ],
                    "range": [
                      1638,
                      1646
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 15
                      },
                      "end": {
                        "line": 40,
                        "column": 23
                      }
                    }
                  },
                  "range": [
                    1631,
                    1647
                  ],
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 8
                    },
                    "end": {
                      "line": 40,
                      "column": 24
                    }
                  }
                },
                "alternate": null,
                "range": [
                  1594,
                  1647
                ],
                "loc": {
                  "start": {
                    "line": 39,
                    "column": 4
                  },
                  "end": {
                    "line": 40,
                    "column": 24
                  }
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "Identifier",
                    "name": "obj",
                    "range": [
                      1657,
                      1660
                    ],
                    "loc": {
                      "start": {
                        "line": 42,
                        "column": 8
                      },
                      "end": {
                        "line": 42,
                        "column": 11
                      }
                    }
                  },
                  "prefix": true,
                  "range": [
                    1656,
                    1660
                  ],
                  "loc": {
                    "start": {
                      "line": 42,
                      "column": 7
                    },
                    "end": {
                      "line": 42,
                      "column": 11
                    }
                  }
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "URI",
                      "range": [
                        1677,
                        1680
                      ],
                      "loc": {
                        "start": {
                          "line": 43,
                          "column": 15
                        },
                        "end": {
                          "line": 43,
                          "column": 18
                        }
                      }
                    },
                    "arguments": [],
                    "range": [
                      1677,
                      1682
                    ],
                    "loc": {
                      "start": {
                        "line": 43,
                        "column": 15
                      },
                      "end": {
                        "line": 43,
                        "column": 20
                      }
                    }
                  },
                  "range": [
                    1670,
                    1683
                  ],
                  "loc": {
                    "start": {
                      "line": 43,
                      "column": 8
                    },
                    "end": {
                      "line": 43,
                      "column": 21
                    }
                  }
                },
                "alternate": null,
                "range": [
                  1653,
                  1683
                ],
                "loc": {
                  "start": {
                    "line": 42,
                    "column": 4
                  },
                  "end": {
                    "line": 43,
                    "column": 21
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Identifier",
                  "name": "obj",
                  "range": [
                    1696,
                    1699
                  ],
                  "loc": {
                    "start": {
                      "line": 45,
                      "column": 11
                    },
                    "end": {
                      "line": 45,
                      "column": 14
                    }
                  }
                },
                "range": [
                  1689,
                  1700
                ],
                "loc": {
                  "start": {
                    "line": 45,
                    "column": 4
                  },
                  "end": {
                    "line": 45,
                    "column": 15
                  }
                }
              }
            ],
            "range": [
              1539,
              1702
            ],
            "loc": {
              "start": {
                "line": 34,
                "column": 48
              },
              "end": {
                "line": 46,
                "column": 1
              }
            }
          },
          "generator": false,
          "expression": false,
          "range": [
            1513,
            1702
          ],
          "loc": {
            "start": {
              "line": 34,
              "column": 22
            },
            "end": {
              "line": 46,
              "column": 1
            }
          }
        },
        "range": [
          1491,
          1702
        ],
        "loc": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 46,
            "column": 1
          }
        }
      },
      "range": [
        1491,
        1704
      ],
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 48,
          "column": 0
        }
      }
    }
  ],
  "sourceType": "module",
  "range": [
    1451,
    1704
  ],
  "loc": {
    "start": {
      "line": 30,
      "column": 0
    },
    "end": {
      "line": 48,
      "column": 0
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "\n * Copyright (C) 2015 ICOS Group, Newcastle University.  All rights reserved.\n * Contact:  James Alastair McLaughlin <j.a.mclaughlin@ncl.ac.uk>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *  \n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  \n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * \n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n ",
      "range": [
        1,
        1449
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 28,
          "column": 3
        }
      }
    }
  ]
}